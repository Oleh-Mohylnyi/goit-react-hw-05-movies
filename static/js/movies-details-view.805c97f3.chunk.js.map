{"version":3,"sources":["services/moviesApi/moviesApi.js","images/cinema-movie.jpg","views/MovieDetailsView/movieDetailsView.module.scss","views/MovieDetailsView/MovieDetailsView.js"],"names":["KEY","URL","fetchMovies","mainQueryString","a","otherQueryString","fetch","response","ok","json","Promise","reject","Error","fetchTrending","fetchSearch","searchQuery","fetchDetails","movieId","fetchCast","fetchReviews","module","exports","MovieSubCast","lazy","MovieSubReviews","MovieDetailsView","useState","movieDetails","setMovieDetails","status","setStatus","useParams","useRouteMatch","url","path","location","useLocation","history","useHistory","locationToBack","state","from","labelToBack","label","useEffect","movieApi","then","type","className","s","Button","onClick","push","color","Card","alt","width","Image","src","poster_path","alternativePicture","InfoList","Title","original_title","vote_average","overview","genres","reduce","acc","genre","name","SubNavBar","SubInfoList","to","pathname","activeClassName","ActiveLink","Link","exact","fallback"],"mappings":"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","file":"static/js/movies-details-view.805c97f3.chunk.js","sourcesContent":["const KEY = \"9b5febc096912e8933f83f306c054db0\";\nconst URL = \"https://api.themoviedb.org/3\";\n\nasync function fetchMovies(mainQueryString, otherQueryString=\"\") {\n\n    const response = await fetch(\n        `${URL}${mainQueryString}?api_key=${KEY}${otherQueryString}`\n    )\n    return response.ok\n        ? await response.json()\n        : Promise.reject(new Error('Not found'))\n}\n\nexport function fetchTrending() {\n    return fetchMovies('/trending/movie/week')\n}\n\nexport function fetchSearch(searchQuery) {\n    return fetchMovies(`/search/movie`, `&query=${searchQuery}`)\n}\n\nexport function fetchDetails(movieId) {\n    return fetchMovies(`/movie/${movieId}`)\n}\n\nexport function fetchCast(movieId) {\n    return fetchMovies(`/movie/${movieId}/credits`)\n}\n\nexport function fetchReviews(movieId) {\n    return fetchMovies(`/movie/${movieId}/reviews`)\n}\n","export default __webpack_public_path__ + \"static/media/cinema-movie.5c8f8c5b.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"movieDetailsView_Button__27AwM\",\"Card\":\"movieDetailsView_Card__1vRBJ\",\"Image\":\"movieDetailsView_Image__4usf2\",\"Title\":\"movieDetailsView_Title__hs3ID\",\"SubInfoList\":\"movieDetailsView_SubInfoList__Ks_hs\",\"SubNavBar\":\"movieDetailsView_SubNavBar__WEkeQ\",\"Link\":\"movieDetailsView_Link__lEgCh\",\"ActiveLink\":\"movieDetailsView_ActiveLink__30WMY\"};","import { useEffect, useState, lazy, Suspense } from \"react\";\nimport { Route, NavLink, useParams, useRouteMatch, Switch, useLocation, useHistory } from \"react-router-dom\";\nimport * as movieApi from '../../services/moviesApi/moviesApi';\nimport alternativePicture from '../../images/cinema-movie.jpg';\nimport Loader from \"../../components/loader/loader\";\nimport Spinner from \"react-loader-spinner\";\nimport s from './movieDetailsView.module.scss';\n\nconst MovieSubCast = lazy(() => import('../MovieSubCast/MovieSubCast'));\nconst MovieSubReviews = lazy(() => import ('../MovieSubReviews/MovieSubReviews'));\n\nexport default function MovieDetailsView() {\n    const [movieDetails, setMovieDetails] = useState(null);\n    const [status, setStatus] = useState(\"idle\");\n\n    const { movieId } = useParams();\n    const { url, path } = useRouteMatch();\n    const location = useLocation();\n    const history = useHistory();\n    const locationToBack=location?.state?.from?.location ?? '/movies';\n    const labelToBack=location?.state?.from?.label ?? 'Go back'\n\n    useEffect(() => {\n        setStatus (\"pending\");\n\n        movieApi.fetchDetails(movieId)\n            .then(response => {\n            setMovieDetails(response)\n            setStatus (\"resolved\")\n\n        }\n            )\n    }, [movieId])\n\n    const onGoBack = () => {\n        history.push(locationToBack)\n    }\n\n    return (\n        <>\n            <button type=\"button\"\n                className={s.Button}\n                onClick={onGoBack}>\n                {labelToBack}\n            </button>\n\n            {(status === 'pending') &&\n                <Spinner type=\"ThreeDots\" color=\"black\" />\n            }\n\n            {(status === 'resolved') &&\n            <>\n            <div className={s.Card}>\n                <img alt=\"\"\n                    width=\"300px\"\n                    className={s.Image} \n                    src={movieDetails.poster_path\n                        ?`https://image.tmdb.org/t/p/w300${movieDetails.poster_path}`\n                        :alternativePicture}>\n                </img>\n                <div className={s.InfoList}>\n                    <h1 className={s.Title} >{movieDetails.original_title}</h1>\n                    <ul>\n                        \n                        {movieDetails.vote_average &&\n                            <li>\n                                <h2>Average</h2>\n                                <p>{movieDetails.vote_average}</p>\n                            </li>\n                        }\n                        {movieDetails.overview &&\n                            <li>\n                                <h2>Overview</h2>\n                                <p>{movieDetails.overview}</p>\n                            </li>\n                        }\n                        {movieDetails.genres &&\n                            <li>\n                                <h2>Genres</h2>\n                                <p>{movieDetails.genres.reduce((acc, genre) => acc=acc+\" \"+genre.name, '')}</p>\n                            </li>\n                        }\n                    </ul>\n                </div>\n            </div>\n            <div className={s.SubNavBar}>\n                    <hr/>\n                    <h2>Additional Information</h2>\n                <ul className={s.SubInfoList}>\n                    <li>\n                        <NavLink to={{\n                            pathname: `${url}/cast`,\n                            state: {from: {location: locationToBack, label: labelToBack}}\n                            }}\n                                activeClassName={s.ActiveLink}\n                                className={s.Link}\n                                exact>\n                                Cast\n                        </NavLink>\n                    </li>\n                    <li>\n                        <NavLink to={{\n                            pathname: `${url}/review`,\n                            state: {from: {location: locationToBack, label: labelToBack}}\n                            }}\n                                activeClassName={s.ActiveLink}\n                                className={s.Link}\n                                exact>\n                                Reviews\n                        </NavLink>\n                    </li>\n                </ul>\n                <hr/>\n            </div>\n            </>}\n            \n            <Suspense fallback={<Loader />}>\n            <Switch>\n                <Route path={`${path}/cast`}>\n                    <MovieSubCast/>\n                </Route>\n                <Route path={`${path}/review`}>\n                    <MovieSubReviews/>\n                </Route>\n            </Switch>\n            </Suspense>\n        </>\n    )\n}"],"sourceRoot":""}