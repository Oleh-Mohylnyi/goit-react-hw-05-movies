{"version":3,"sources":["services/moviesApi/moviesApi.js","images/cinema-movie.jpg","components/Gallery/gallery.module.scss","components/GallaryItem/galleryItem.module.scss","components/GallaryItem/GalleryItem.js","components/Gallery/Gallery.js","views/HomeView/HomeView.js"],"names":["KEY","URL","fetchMovies","mainQueryString","a","otherQueryString","fetch","response","ok","json","Promise","reject","Error","fetchTrending","fetchSearch","searchQuery","fetchDetails","movieId","fetchCast","fetchReviews","module","exports","GalleryItem","movie","location","id","poster_path","original_title","vote_average","className","s","Item","Link","to","pathname","state","from","label","alt","Image","width","src","alternativePicture","Title","Average","Gallery","status","movies","map","HomeView","useState","JSON","parse","localStorage","getItem","moviesTrending","setMoviesTrending","setStatus","useLocation","todayDate","Date","toLocaleDateString","trendingMoviesDate","responseProcessing","results","setItem","stringify","useEffect","movieApi","then","catch","err","type","color"],"mappings":"gVAAMA,EAAM,mCACNC,EAAM,+B,SAEGC,E,8EAAf,WAA2BC,GAA3B,6BAAAC,EAAA,6DAA4CC,EAA5C,+BAA6D,GAA7D,SAE2BC,MAAM,GAAD,OACrBL,GADqB,OACfE,EADe,oBACYH,GADZ,OACkBK,IAHlD,YAEUE,EAFV,QAKoBC,GALpB,iCAMgBD,EAASE,OANzB,gDAOUC,QAAQC,OAAO,IAAIC,MAAM,cAPnC,mF,wBAUO,SAASC,IACZ,OAAOX,EAAY,wBAGhB,SAASY,EAAYC,GACxB,OAAOb,EAAY,gBAAD,iBAA4Ba,IAG3C,SAASC,EAAaC,GACzB,OAAOf,EAAY,UAAD,OAAWe,IAG1B,SAASC,EAAUD,GACtB,OAAOf,EAAY,UAAD,OAAWe,EAAX,aAGf,SAASE,EAAaF,GACzB,OAAOf,EAAY,UAAD,OAAWe,EAAX,e,gCC9BP,QAA0B,0C,mBCCzCG,EAAOC,QAAU,CAAC,QAAU,2B,mBCA5BD,EAAOC,QAAU,CAAC,KAAO,0BAA0B,MAAQ,2BAA2B,MAAQ,2BAA2B,KAAO,0BAA0B,QAAU,+B,sICKrJ,SAASC,EAAT,GAA2C,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACjCC,EAAkDF,EAAlDE,GAAIC,EAA8CH,EAA9CG,YAAaC,EAAiCJ,EAAjCI,eAAgBC,EAAiBL,EAAjBK,aAOzC,OACI,qBAAIC,UAAWC,IAAEC,KAAjB,UACI,eAAC,IAAD,CACIF,UAAWC,IAAEE,KACbC,GAAI,CACAC,SAAS,UAAD,OAAYT,GACpBU,MAAO,CACHC,KAAM,CAAEZ,WAAUa,MAAM,WAAD,OAXb,MAAtBb,EAASU,SAA0B,OACb,YAAtBV,EAASU,SAAgC,cAA7C,MAKI,UAQI,qBAAKI,IAAI,GACLT,UAAWC,IAAES,MACbC,MAAM,QACNC,IAAKf,EAAW,yCACuBA,GAClCgB,MAET,mBAAGb,UAAWC,IAAEa,MAAhB,SACKhB,OAGS,IAAjBC,GACG,oBAAGC,UAAWC,IAAEc,QAAhB,UACA,cAAC,IAAD,IACChB,QClCF,SAASiB,EAAT,GAA+C,EAA5BC,OAA6B,IAArBC,EAAoB,EAApBA,OAAQvB,EAAY,EAAZA,SAC9C,OACI,oBAAIK,UAAWC,IAAEe,QAAjB,SACSE,EAAOC,KAAI,SAAAzB,GAAK,OACb,cAACD,EAAD,CACIE,SAAUA,EACVD,MAAOA,GAFOA,EAAME,W,iJCA7B,SAASwB,IAAY,IAAD,EAC/B,EAA4CC,oBAAS,WAAO,IAAD,EACvD,iBAAOC,KAAKC,MAAMC,aAAaC,QAAQ,0BAAvC,QAA6D,QADjE,mBAAOC,EAAP,KAAuBC,EAAvB,KAGA,EAA4BN,mBAAS,QAArC,mBAAOJ,EAAP,KAAeW,EAAf,KAEMjC,EAAWkC,cACXC,GAAY,IAAIC,MAAOC,qBACvBC,EAAkB,UAAGX,KAAKC,MAAMC,aAAaC,QAAQ,8BAAnC,QAA6D,GAErF,SAASS,EAAmBxD,GACxBiD,EAAkBjD,EAASyD,SAC3BP,EAAW,YACXJ,aAAaY,QAAQ,iBAAkBd,KAAKe,UAAU3D,EAASyD,UAC/DX,aAAaY,QAAQ,qBAAsBd,KAAKe,UAAUP,IAgB9D,OAbAQ,qBAAU,WACiB,OAAnBZ,GACAO,IAAuBH,IAG3BF,EAAW,WACXW,MACKC,KAAKN,GACLO,OAAM,SAAAC,GAAG,OAAId,EAAU,gBAG7B,IAGC,mCACI,gCACiB,YAAXX,GACE,cAAC,IAAD,CAAS0B,KAAK,YAAYC,MAAM,WAEvB,aAAX3B,GAAuBS,IACzB,cAAC,IAAD,CAAST,OAAQA,EACbC,OAAQQ,EACR/B,SAAUA,IAGD,WAAXsB,GAAwB","file":"static/js/home-view.5dda80ba.chunk.js","sourcesContent":["const KEY = \"9b5febc096912e8933f83f306c054db0\";\nconst URL = \"https://api.themoviedb.org/3\";\n\nasync function fetchMovies(mainQueryString, otherQueryString=\"\") {\n\n    const response = await fetch(\n        `${URL}${mainQueryString}?api_key=${KEY}${otherQueryString}`\n    )\n    return response.ok\n        ? await response.json()\n        : Promise.reject(new Error('Not found'))\n}\n\nexport function fetchTrending() {\n    return fetchMovies('/trending/movie/week')\n}\n\nexport function fetchSearch(searchQuery) {\n    return fetchMovies(`/search/movie`, `&query=${searchQuery}`)\n}\n\nexport function fetchDetails(movieId) {\n    return fetchMovies(`/movie/${movieId}`)\n}\n\nexport function fetchCast(movieId) {\n    return fetchMovies(`/movie/${movieId}/credits`)\n}\n\nexport function fetchReviews(movieId) {\n    return fetchMovies(`/movie/${movieId}/reviews`)\n}\n","export default __webpack_public_path__ + \"static/media/cinema-movie.5c8f8c5b.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Gallery\":\"gallery_Gallery__LOFCh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Item\":\"galleryItem_Item__1dJ4G\",\"Image\":\"galleryItem_Image__A6sJe\",\"Title\":\"galleryItem_Title__3TudR\",\"Link\":\"galleryItem_Link__3Io9f\",\"Average\":\"galleryItem_Average__3WQG7\"};","import { IoIosStarHalf } from 'react-icons/io';\nimport { Link } from \"react-router-dom\";\nimport alternativePicture from '../../images/cinema-movie.jpg';\nimport s from './galleryItem.module.scss';\nimport PropTypes from 'prop-types'\n\nexport default function GalleryItem({ movie, location }) {\n    const { id, poster_path, original_title, vote_average } = movie;\n\n    function backBtnText () {\n        if (location.pathname === \"/\") {return \"Home\"};\n        if (location.pathname === \"/movies\") {return \"Movies\"};\n    }\n\n    return (\n        <li className={s.Item}>\n            <Link\n                className={s.Link}\n                to={{\n                    pathname: `movies/${id}`,\n                    state: {\n                        from: { location, label: `back to ${backBtnText()}` }\n                    },\n                }}>\n                <img alt=\"\"\n                    className={s.Image}\n                    width=\"200px\" \n                    src={poster_path\n                        ?`https://image.tmdb.org/t/p/w300${poster_path}`\n                        :alternativePicture}>\n                </img>\n                <p className={s.Title}>\n                    {original_title}\n                </p>\n            </Link>\n            {vote_average !== 0 &&\n                <p className={s.Average}>\n                <IoIosStarHalf />\n                {vote_average}\n                </p>\n            }\n        </li>\n    )\n}\n\nGalleryItem.propTypes = {\n    movie: PropTypes.object,\n    location: PropTypes.object,\n}","import s from './gallery.module.scss';\nimport GalleryItem from \"../../components/GallaryItem/GalleryItem\";\n\n\nexport default function Gallery({ status, movies, location }) {\n    return (\n        <ul className={s.Gallery}>\n                {movies.map(movie =>\n                    <GalleryItem key={movie.id}\n                        location={location}\n                        movie={movie} />\n                    )}\n        </ul>\n    )\n}","import { useState, useEffect } from \"react\";\nimport { useLocation} from \"react-router-dom\";\nimport * as movieApi from '../../services/moviesApi/moviesApi'\nimport Spinner from \"react-loader-spinner\";\n// import s from './homeView.module.scss';\nimport Gallery from \"../../components/Gallery/Gallery\";\n\n\nexport default function HomeView() {\n    const [moviesTrending, setMoviesTrending] = useState(() => {\n        return JSON.parse(localStorage.getItem('trendingMovies')) ?? null\n    })\n    const [status, setStatus] = useState(\"idle\");\n    \n    const location = useLocation();\n    const todayDate = new Date().toLocaleDateString();\n    const trendingMoviesDate = JSON.parse(localStorage.getItem('trendingMoviesDate')) ?? \"\";\n\n    function responseProcessing(response) {\n        setMoviesTrending(response.results)\n        setStatus (\"resolved\")\n        localStorage.setItem('trendingMovies', JSON.stringify(response.results))\n        localStorage.setItem('trendingMoviesDate', JSON.stringify(todayDate))\n    }\n\n    useEffect(() => {\n        if (moviesTrending !== null &&\n            trendingMoviesDate === todayDate) {\n            return\n        }\n        setStatus (\"pending\");\n        movieApi.fetchTrending()\n            .then(responseProcessing)\n            .catch(err => setStatus(\"reject\"));\n        \n            // eslint-disable-next-line\n    }, [])\n    \n    return (\n        <>\n            <div >\n                {(status === 'pending') &&\n                    <Spinner type=\"ThreeDots\" color=\"black\" />\n                }\n                {(status === 'resolved'||moviesTrending) &&\n                <Gallery status={status}\n                    movies={moviesTrending}\n                    location={location}\n                />\n                }\n                {(status === 'reject') && <h2>{`no results found for request`}</h2>}\n            </div>\n        </>\n    )\n}"],"sourceRoot":""}